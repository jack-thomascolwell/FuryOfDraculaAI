;;; /furyOfDraculaWorld.krf
;;;
;;; This file defines the FuryOfDraculaWorldMt microtheory. See README.md for more.
;;; Authors: Joey Rose, Ruth Schlosser, and Jack Thomas-Colwell

(in-microtheory FuryOfDraculaWorldMt)
(genlMt FuryOfDraculaWorldMt EvasionGameMt)
(genlMt Session-ReasonerPlanMt FuryOfDraculaAgentPlansMt)
(genlMt FuryOfDraculaAgentPlansMt FuryOfDraculaWorldMt)


;;;Best image: https://boardgamegeek.com/image/3224644/kiloforce

;;; SECTION Map

;;;Brittanica
;;;Edinburgh
(isa Edinburgh LargeCity)
(region Edinburgh Brittanica)
(connectedTo Edinburgh Manchester road)
(connectedTo Edinburgh Manchester whiteTrain)
(connectedTo Edinburgh NorthSea port)
(connectedTo NorthSea Edinburgh port)
;;;Galway
(isa Galway SmallCity)
(region Galway Brittanica)
(connectedTo Galway Dublin road)
(connectedTo Galway NorthAtlantic port)
(connectedTo NorthAtlantic Galway port)
;;;Dublin
(isa Dublin SmallCity)
(region Dublin Brittanica)
(connectedTo Dublin Galway road)
(connectedTo Dublin IrishSea port)
(connectedTo IrishSea Dublin port)
;;;Manchester
(isa Manchester LargeCity)
(region Manchester Brittanica)
(connectedTo Manchester Edinburgh road)
(connectedTo Manchester Liverpool road)
(connectedTo Manchester London road)
(connectedTo Manchester Edinburgh whiteTrain)
(connectedTo Manchester Liverpool whiteTrain)
(connectedTo Manchester London whiteTrain)
;;;Liverpool
(isa Liverpool LargeCity)
(region Liverpool Brittanica)
(connectedTo Liverpool Manchester road)
(connectedTo Liverpool Swansea road)
(connectedTo Liverpool Manchester whiteTrain)
(connectedTo Liverpool IrishSea port)
(connectedTo IrishSea Liverpool port)
;;;Swansea
(isa Swansea SmallCity)
(region Swansea Brittanica)
(connectedTo Swansea Liverpool road)
(connectedTo Swansea London road)
(connectedTo Swansea London whiteTrain)
(connectedTo Swansea IrishSea port)
(connectedTo IrishSea Swansea port)
;;;Plymouth
(isa Plymouth SmallCity)
(region Plymouth Brittanica)
(connectedTo Plymouth London road)
(connectedTo Plymouth London whiteTrain)
(connectedTo Plymouth EnglishChannel port)
(connectedTo EnglishChannel Plymouth port)
;;;London
(isa London LargeCity)
(region London Brittanica)
(connectedTo London Manchester road)
(connectedTo London Swansea road)
(connectedTo London Plymouth road)
(connectedTo London Manchester whiteTrain)
(connectedTo London Swansea whiteTrain)
(connectedTo London Plymouth whiteTrain)
(connectedTo London EnglishChannel port)
(connectedTo EnglishChannel London port)

;;;Gallia
;;;Le Havre
(isa LeHavre SmallCity)
(region LeHavre Gallia)
(connectedTo LeHavre Nantes road)
(connectedTo LeHavre Paris road)
(connectedTo LeHavre Brussels road)
(connectedTo LeHavre Paris whiteTrain)
(connectedTo LeHavre EnglishChannel port)
(connectedTo EnglishChannel LeHavre port)
;;;Nantes
(isa Nantes LargeCity)
(region Nantes Gallia)
(connectedTo Nantes LeHavre road)
(connectedTo Nantes Paris road)
(connectedTo Nantes ClermontFerrand road)
(connectedTo Nantes Bordeaux road)
(connectedTo Nantes NorthAtlantic port)
(connectedTo NorthAtlantic Nantes port)
;;;Bordeaux
(isa Bordeaux LargeCity)
(region Bordeaux Gallia)
(connectedTo Bordeaux Nantes road)
(connectedTo Bordeaux ClermontFerrand road)
(connectedTo Bordeaux Toulouse road)
(connectedTo Bordeaux Santander road)
(connectedTo Bordeaux Paris whiteTrain)
(connectedTo Bordeaux Saragossa whiteTrain)
(connectedTo Bordeaux NorthAtlantic port)
(connectedTo NorthAtlantic Bordeaux port)
;;;Toulouse
(isa Toulouse SmallCity)
(region Toulouse Gallia)
(connectedTo Toulouse Bordeaux road)
(connectedTo Toulouse ClermontFerrand road)
(connectedTo Toulouse Marseilles road)
(connectedTo Toulouse Saragossa road)
(connectedTo Toulouse Barcelona road)
;;;Clermont-Ferrand
(isa ClermontFerrand SmallCity)
(region ClermontFerrand Gallia)
(connectedTo ClermontFerrand Nantes road)
(connectedTo ClermontFerrand Paris road)
(connectedTo ClermontFerrand Geneva road)
(connectedTo ClermontFerrand Marseilles road)
(connectedTo ClermontFerrand Toulouse road)
(connectedTo ClermontFerrand Bordeaux road)
;;;Marseilles
(isa Marseilles LargeCity)
(region Marseilles Gallia)
(connectedTo Marseilles Toulouse road)
(connectedTo Marseilles ClermontFerrand road)
(connectedTo Marseilles Geneva road)
(connectedTo Marseilles Zurich road)
(connectedTo Marseilles Milan road)
(connectedTo Marseilles Genoa road)
(connectedTo Marseilles Paris whiteTrain)
(connectedTo Marseilles Milan yellowTrain)
(connectedTo Marseilles MediterraneanSea port)
(connectedTo MediterraneanSea Marseilles port)
;;;Paris
(isa Paris LargeCity)
(region Paris Gallia)
(connectedTo Paris LeHavre road)
(connectedTo Paris Brussels road)
(connectedTo Paris Strasbourg road)
(connectedTo Paris Geneva road)
(connectedTo Paris ClermontFerrand road)
(connectedTo Paris Nantes road)
(connectedTo Paris LeHavre whiteTrain)
(connectedTo Paris Brussels whiteTrain)
(connectedTo Paris Marseilles whiteTrain)
(connectedTo Paris Bordeaux whiteTrain)
;;;Strasbourg
(isa Strasbourg SmallCity)
(region Strasbourg Gallia)
(connectedTo Strasbourg Paris road)
(connectedTo Strasbourg Brussels road)
(connectedTo Strasbourg Cologne road)
(connectedTo Strasbourg Frankfurt road)
(connectedTo Strasbourg Nuremberg road)
(connectedTo Strasbourg Zurich road)
(connectedTo Strasbourg Geneva road)
(connectedTo Strasbourg Frankfurt whiteTrain)
(connectedTo Strasbourg Munich whiteTrain)
(connectedTo Strasbourg Zurich whiteTrain)
;;;Brussels
(isa Brussels LargeCity)
(region Brussels Gallia)
(connectedTo Brussels LeHavre road)
(connectedTo Brussels Amsterdam road)
(connectedTo Brussels Cologne road)
(connectedTo Brussels Strasbourg road)
(connectedTo Brussels Paris road)
(connectedTo Brussels Paris whiteTrain)
(connectedTo Brussels Cologne whiteTrain)

;;;Iberia
;;;Santander
(isa Santander SmallCity)
(region Santander Iberia)
(connectedTo Santander Lisbon road)
(connectedTo Santander Madrid road)
(connectedTo Santander Saragossa road)
(connectedTo Santander Bordeaux road)
(connectedTo Santander Madrid whiteTrain)
(connectedTo Santander SouthAtlantic port)
(connectedTo SouthAtlantic Santander port)
;;;Madrid
(isa Madrid LargeCity)
(region Madrid Iberia)
(connectedTo Madrid Lisbon road)
(connectedTo Madrid Santander road)
(connectedTo Madrid Saragossa road)
(connectedTo Madrid Alicante road)
(connectedTo Madrid Granada road)
(connectedTo Madrid Cadiz road)
(connectedTo Madrid Lisbon whiteTrain)
(connectedTo Madrid Santander whiteTrain)
(connectedTo Madrid Saragossa whiteTrain)
(connectedTo Madrid Alicante whiteTrain)
;;;Granada
(isa Granada SmallCity)
(region Granada Iberia)
(connectedTo Granada Cadiz road)
(connectedTo Granada Madrid road)
(connectedTo Granada Alicante road)
;;;Alicante
(isa SmallCity)
(region Alicante Iberia)
(connectedTo Alicante Granada road)
(connectedTo Alicante Madrid road)
(connectedTo Alicante Saragossa road)
(connectedTo Alicante MediterraneanSea port)
(connectedTo MediterraneanSea Alicante port)
;;;Barcelona
(isa Barcelona LargeCity)
(region Barcelona Iberia)
(connectedTo Barcelona Saragossa road)
(connectedTo Barcelona Toulouse road)
(connectedTo Barcelona Alicante whiteTrain)
(connectedTo Barcelona Saragossa whiteTrain)
(connectedTo Barcelona MediterraneanSea port)
(connectedTo MediterraneanSea Barcelona port)
;;;Saragossa
(isa Saragossa SmallCity)
(region Saragossa Iberia)
(connectedTo Saragossa Madrid road)
(connectedTo Saragossa Santander road)
(connectedTo Saragossa Toulouse road)
(connectedTo Saragossa Barcelona road)
(connectedTo Saragossa Alicante road)
(connectedTo Saragossa Madrid whiteTrain)
(connectedTo Saragossa Bordeaux whiteTrain)
(connectedTo Saragossa Barcelona whiteTrain)
;;;Lisbon
(isa Lisbon LargeCity)
(region Lisbon Iberia)
(connectedTo Lisbon Santander road)
(connectedTo Lisbon Madrid road)
(connectedTo Lisbon Cadiz road)
(connectedTo Lisbon Madrid whiteTrain)
(connectedTo Lisbon SouthAtlantic port)
(connectedTo SouthAtlantic Lisbon port)
;;;Cadiz
(isa Cadiz LargeCity)
(region Cadiz Iberia)
(connectedTo Cadiz Lisbon road)
(connectedTo Cadiz Madrid road)
(connectedTo Cadiz Granada road)
(connectedTo Cadiz SouthAtlantic port)
(connectedTo SouthAtlantic Cadiz port)

;;;Germania
;;;Amsterdam
(isa Amsterdam LargeCity)
(region Amsterdam Germania)
(connectedTo Amsterdam Cologne road)
(connectedTo Amsterdam Brussels road)
(connectedTo Amsterdam NorthSea port)
(connectedTo NorthSea Amsterdam port)
;;;Cologne
(isa Cologne LargeCity)
(region Cologne Germania)
(connectedTo Cologne Amsterdam road)
(connectedTo Cologne Brussels road)
(connectedTo Cologne Frankfurt road)
(connectedTo Cologne Hamburg road)
(connectedTo Cologne Strasbourg road)
(connectedTo Cologne Leipzig road)
(connectedTo Cologne Frankfurt whiteTrain)
(connectedTo Cologne Berlin whiteTrain)
(connectedTo Cologne Brussels whiteTrain)
;;;Frankfurt
(isa Frankfurt SmallCity)
(region Frankfurt Germania)
(connectedTo Frankfurt Cologne road)
(connectedTo Frankfurt Leipzig road)
(connectedTo Frankfurt Nuremberg road)
(connectedTo Frankfurt Strasbourg road)
(connectedTo Frankfurt Cologne whiteTrain)
(connectedTo Frankfurt Leipzig whiteTrain)
(connectedTo Frankfurt Strasbourg whiteTrain)
;;;Hamburg
(isa Hamburg LargeCity)
(region Hamburg Germania)
(connectedTo Hamburg NorthSea port)
(connectedTo NorthSea Hamburg port)
(connectedTo Hamburg Cologne road)
(connectedTo Hamburg Leipzig road)
(connectedTo Hamburg Berlin road)
(connectedTo Hamburg Berlin whiteTrain)
;;;Leipzig
(isa Leipzig LargeCity)
(region Leipzig Germania)
(connectedTo Leipzig Berlin road)
(connectedTo Leipzig Hamburg road)
(connectedTo Leipzig Cologne road)
(connectedTo Leipzig Frankfurt road)
(connectedTo Leipzig Nuremberg road)
(connectedTo Leipzig Berlin whiteTrain)
(connectedTo Leipzig Frankfurt whiteTrain)
(connectedTo Leipzig Nuremberg whiteTrain)
;;;Nuremberg
(isa Nuremberg SmallCity)
(region Nuremberg Germania)
(connectedTo Nuremberg Frankfurt road)
(connectedTo Nuremberg Leipzig road)
(connectedTo Nuremberg Prague road)
(connectedTo Nuremberg Munich road)
(connectedTo Nuremberg Zurich road)
(connectedTo Nuremberg Strasbourg road)
(connectedTo Nuremberg Munich whiteTrain)
(connectedTo Nuremberg Leipzig whiteTrain)
;;;Munich
(isa Munich LargeCity)
(region Munich Germania)
(connectedTo Munich Nuremberg road)
(connectedTo Munich Vienna road)
(connectedTo Munich Zagreb road)
(connectedTo Munich Venice road)
(connectedTo Munich Milan road)
(connectedTo Munich Zurich road)
(connectedTo Munich Nuremberg whiteTrain)
(connectedTo Munich Strasbourg whiteTrain)
;;;Berlin
(isa Berlin LargeCity)
(region Berlin Germania)
(connectedTo Berlin Hamburg road)
(connectedTo Berlin Leipzig road)
(connectedTo Berlin Prague road)
(connectedTo Berlin Hamburg whiteTrain)
(connectedTo Berlin Cologne whiteTrain)
(connectedTo Berlin Leipzig whiteTrain)
(connectedTo Berlin Prague yellowTrain)

;;;Italia
;;;Geneva
(isa Geneva SmallCity)
(region Geneva Italia)
(connectedTo Geneva Marseilles road)
(connectedTo Geneva ClermontFerrand road)
(connectedTo Geneva Paris road)
(connectedTo Geneva Strasbourg road)
(connectedTo Geneva Zurich road)
(connectedTo Geneva Milan yellowTrain)
;;;Milan
(isa Milan LargeCity)
(region Milan Italia)
(connectedTo Milan Zurich road)
(connectedTo Milan Munich road)
(connectedTo Milan Venice road)
(connectedTo Milan Genoa road)
(connectedTo Milan Marseilles road)
(connectedTo Milan Zurich yellowTrain)
(connectedTo Milan Geneva yellowTrain)
(connectedTo Milan Marseilles yellowTrain)
(connectedTo Milan Genoa yellowTrain)
;;;Genoa
(isa Genoa LargeCity)
(region Genoa Italia)
(connectedTo Genoa TyrrhenianSea port)
(connectedTo TyrrhenianSea Genoa port)
(connectedTo Genoa Marseilles road)
(connectedTo Genoa Florence road)
(connectedTo Genoa Venice road)
(connectedTo Genoa Milan road)
(connectedTo Genoa Milan yellowTrain)
(connectedTo Genoa Venice yellowTrain)
(connectedTo Genoa Florence yellowTrain)
;;;Cagliari
(isa Cagliari SmallCity)
(region Cagliari Italia)
(connectedTo Cagliari MediterraneanSea port)
(connectedTo MediterraneanSea Cagliari port)
(connectedTo Cagliari TyrrhenianSea port)
(connectedTo TyrrhenianSea Cagliari port)
;;;Florence
(isa Florence SmallCity)
(region Florence Italia)
(connectedTo Florence Genoa road)
(connectedTo Florence Venice road)
(connectedTo Florence Rome road)
(connectedTo Florence Genoa yellowTrain)
(connectedTo Florence Rome yellowTrain)
;;;Rome
(isa Rome LargeCity)
(region Rome Italia)
(connectedTo Rome TyrrhenianSea port)
(connectedTo TyrrhenianSea Rome port)
(connectedTo Rome Florence road)
(connectedTo Rome Naples road)
(connectedTo Rome Bari road)
(connectedTo Rome Naples yellowTrain)
(connectedTo Rome Florence yellowTrain)
;;;Naples
(isa Naples LargeCity)
(region Naples Italia)
(connectedTo Naples TyrrhenianSea port)
(connectedTo TyrrhenianSea Naples port)
(connectedTo Naples Rome road)
(connectedTo Naples Bari road)
(connectedTo Naples Rome yellowTrain)
(connectedTo Naples Bari yellowTrain)
;;;Bari
(isa Bari SmallCity)
(region Bari Italia)
(connectedTo Bari AdriaticSea port)
(connectedTo AdriaticSea Bari port)
(connectedTo Bari Rome road)
(connectedTo Bari Naples road)
(connectedTo Bari Naples yellowTrain)
;;;Venice
(isa Venice SmallCity)
(region Italia)
(connectedTo Venice AdriaticSea port)
(connectedTo AdriaticSea Venice port)
(connectedTo Venice Munich road)
(connectedTo Venice Milan road)
(connectedTo Venice Genoa road)
(connectedTo Venice Florence road)
(connectedTo Venice Genoa yellowTrain)
(connectedTo Venice Vienna yellowTrain)
;;;Zurich
(isa Zurich SmallCity)
(region Zurich Italia)
(connectedTo Zurich Nuremberg road)
(connectedTo Zurich Strasbourg road)
(connectedTo Zurich Munich road)
(connectedTo Zurich Geneva road)
(connectedTo Zurich Marseilles road)
(connectedTo Zurich Milan road)
(connectedTo Zurich Milan yellowTrain)
(connectedTo Zurich Strasbourg whiteTrain)

;;;Austro-Hungaria
;;;Prague
(isa Prague LargeCity)
(region Prague AustroHungaria)
(connectedTo Prague Berlin road)
(connectedTo Prague Nuremberg road)
(connectedTo Prague Vienna road)
(connectedTo Prague Berlin yellowTrain)
(connectedTo Prague Vienna yellowTrain)
;;;Vienna
(isa Vienna LargeCity)
(region Vienna AustroHungaria)
(connectedTo Vienna Prague road)
(connectedTo Vienna Munich road)
(connectedTo Vienna Zagreb road)
(connectedTo Vienna Budapest road)
(connectedTo Vienna Prague yellowTrain)
(connectedTo Vienna Venice yellowTrain)
(connectedTo Vienna Budapest yellowTrain)
;;;Budapest
(isa Budapest LargeCity)
(region Budapest AustroHungaria)
(connectedTo Budapest Vienna road)
(connectedTo Budapest Klausenburg road)
(connectedTo Budapest Zagreb road)
(connectedTo Budapest Szeged road)
(connectedTo Budapest Vienna yellowTrain)
(connectedTo Budapest Szeged yellowTrain)
;;;Zagreb
(isa Zagreb SmallCity)
(region Zagreb AustroHungaria)
(connectedTo Zagreb Munich road)
(connectedTo Zagreb Vienna road)
(connectedTo Zagreb Budapest road)
(connectedTo Zagreb Szeged road)
(connectedTo Zagreb Sarajevo road)
;;;Szeged
(isa Szeged SmallCity)
(region Szeged AustroHungaria)
(connectedTo Szeged Budapest road)
(connectedTo Szeged Zagreb road)
(connectedTo Szeged Klausenburg road)
(connectedTo Szeged Belgrade road)
(connectedTo Szeged Belgrade yellowTrain)
(connectedTo Szeged Budapest yellowTrain)
(connectedTo Szeged Bucharest yellowTrain)
;;;Sarajevo
(isa Sarajevo SmallCity)
(region Sarajevo AustroHungaria)
(connectedTo Sarajevo Belgrade road)
(connectedTo Sarajevo Zagreb road)
(connectedTo Sarajevo Valona road)
(connectedTo Sarajevo Sofia road)
;;;Belgrade
(isa Belgrade SmallCity)
(region Belgrade AustroHungaria)
(connectedTo Belgrade Szeged road)
(connectedTo Belgrade Sarajevo road)
(connectedTo Belgrade Sofia road)
(connectedTo Belgrade Bucharest road)
(connectedTo Belgrade Klausenburg road)
(connectedTo Belgrade Szeged yellowTrain)
(connectedTo Belgrade Sofia yellowTrain)
;;;Klausenburg
(isa Klausenburg SmallCity)
(region Klausenburg AustroHungaria)
(connectedTo Klausenburg Budapest road)
(connectedTo Klausenburg Szeged road)
(connectedTo Klausenburg Belgrade road)
(connectedTo Klausenburg CastleDracula road)
(connectedTo Klausenburg Bucharest road)
(connectedTo Klausenburg Galatz road)


;;;Baltica
;;;Castle Dracula
(isa CastleDracula Castle)
(region CastleDracula Baltica)
(connectedTo CastleDracula Klausenburg road)
(connectedTo CastleDracula Galatz road)
;;;Bucharest
(isa Bucharest LargeCity)
(region Bucharest Baltica)
(connectedTo Bucharest Klausenburg road)
(connectedTo Bucharest Galatz road)
(connectedTo Bucharest Belgrade road)
(connectedTo Bucharest Sofia road)
(connectedTo Bucharest Constanta road)
(connectedTo Bucharest Szeged yellowTrain)
(connectedTo Bucharest Galatz yellowTrain)
(connectedTo Bucharest Constanta yellowTrain)
;;;Sofia
(isa Sofia SmallCity)
(region Sofia Baltica)
(connectedTo Sofia Sarajevo road)
(connectedTo Sofia Belgrade road)
(connectedTo Sofia Bucharest road)
(connectedTo Sofia Varna road)
(connectedTo Sofia Salonica road)
(connectedTo Sofia Valona road)
(connectedTo Sofia Salonica yellowTrain)
(connectedTo Sofia Belgrade yellowTrain)
(connectedTo Sofia Varna yellowTrain)
;;;Valona
(isa Valona SmallCity)
(region Valona Baltica)
(connectedTo Valona AdriaticSea port)
(connectedTo AdriaticSea Valona port)
(connectedTo Valona Sarajevo road)
(connectedTo Valona Sofia road)
(connectedTo Valona Salonica road)
(connectedTo Valona Athens road)
;;;Salonica
(isa Salonica SmallCity)
(region Salonica Baltica)
(connectedTo Salonica IonianSea port)
(connectedTo IonianSea Salonica port)
(connectedTo Salonica Sofia road)
(connectedTo Salonica Valona road)
(connectedTo Salonica Sofia yellowTrain)
;;;Athens
(isa Athens LargeCity)
(region Athens Baltica)
(connectedTo Athens IonianSea port)
(connectedTo IonianSea Athens port)
(connectedTo Athens Valona road)
;;;Varna
(isa Varna LargeCity)
(region Varna Baltica)
(connectedTo Varna BlackSea port)
(connectedTo BlackSea Varna port)
(connectedTo Varna Sofia road)
(connectedTo Varna Constanta road)
(connectedTo Varna Sofia yellowTrain)
;;;Constanta
(isa Constanta LargeCity)
(region Constanta Baltica)
(connectedTo Constanta BlackSea port)
(connectedTo BlackSea Constanta port)
(connectedTo Constanta Varna road)
(connectedTo Constanta Bucharest road)
(connectedTo Constanta Bucharest  yellowTrain)
;;;Galatz
(isa Galatz SmallCity)
(region Galatz Baltica)
(connectedTo Galatz Klausenburg road)
(connectedTo Galatz CastleDracula road)
(connectedTo Galatz Bucharest road)
(connectedTo Galatz Bucharest yellowTrain)


;;;Seas
;;;NorthSea
(isa NorthSea Sea)
(connectedTo NorthSea EnglishChannel seaAdjacent)
;;;NorthAtlantic
(isa NorthAtlantic Sea)
(connectedTo NorthAtlantic IrishSea seaAdjacent)
(connectedTo NorthAtlantic EnglishChannel seaAdjacent)
(connectedTo NorthAtlantic SouthAtlantic seaAdjacent)
;;;IrishSea
(isa IrishSea Sea)
(connectedTo IrishSea NorthAtlantic seaAdjacent)
;;;EnglishChannel
(isa EnglishChannel Sea)
(connectedTo EnglishChannel NorthSea seaAdjacent)
(connectedTo EnglishChannel NorthAtlantic seaAdjacent)
;;;SouthAtlantic
(isa SouthAtlantic Sea)
(connectedTo SouthAtlantic NorthAtlantic seaAdjacent)
(connectedTo SouthAtlantic MediterraneanSea seaAdjacent)
;;;Mediterranean
(isa MediterraneanSea Sea)
(connectedTo MediterraneanSea SouthAtlantic seaAdjacent)
(connectedTo MediterraneanSea TyrrhenianSea seaAdjacent)
;;;TyrrhenianSea
(isa TyrrhenianSea Sea)
(connectedTo TyrrhenianSea MediterraneanSea seaAdjacent)
(connectedTo TyrrhenianSea IonianSea seaAdjacent)
;;;AdriaticSea
(isa AdriaticSea Sea)
(connectedTo AdriaticSea IonianSea seaAdjacent)
;;;IonianSea
(isa IonianSea Sea)
(connectedTo IonianSea AdriaticSea seaAdjacent)
(connectedTo IonianSea BlackSea seaAdjacent)
(connectedTo IonianSea TyrrhenianSea seaAdjacent)
;;;BlackSea
(isa BlackSea Sea)
(connectedTo BlackSea IonianSea seaAdjacent)

;;;Regions:
;;;Brittanica
(isa Brittanica MapRegion)
;;;Gallia
(isa Gallia MapRegion)
;;;Iberia
(isa Iberia MapRegion)
;;;Germania
(isa Germania MapRegion)
Italia
(isa Italia MapRegion)
Baltica
(isa Baltica MapRegion)
AustroHungaria
(isa AustroHungaria MapRegion)

;;; SECTION Dracula Specific Things
(isa road ConnectionType)
	(connects road City City)
(isa seaAdjacent ConnectionType)
	(connects seaAdjacent Sea Sea)
(isa train ConnectionType)
	(connects train City City)
(isa whiteTrain ConnectionType)
	(genls whiteTrain Train)
(isa yellowTrain ConnectionType)
	(genls yellowTrain Train)
(isa port ConnectionType)
	(connects port City Sea)
(isa Castle LocationType)
	(genls Castle City)
(comment Castle "Castle is a collection of Castle locations on the board")
(isa City LocationType)
(genls City Location)
(comment City "City is a collection of City locations on the board")
(isa LargeCity LocationType)
	(genls LargeCity City)
(comment LargeCity "LargeCity is a collection of Large City locations on the board")
(isa SmallCity LocationType)
	(genls SmallCity City)
	(comment SmallCity "SmallCity is a collection of Small City locations on the board")
(isa Sea LocationType)
	(genls Sea Location)
	(comment Sea "Sea is a collection of Sea Zones on the board")
(isa maxCards BinaryPredicate)
	(arity maxCards 2)
	(arg1isa maxCards Agent)
	(arg2isa maxCards Integer)
	(comment maxCards "maxCards describes that an agent can hold at most some number of item or event cards")
(isa maxBiteTokens BinaryPredicate)
	(arity maxBiteTokens 2)
	(arg1isa maxBiteTokens Hunter)
	(arg2isa maxBiteTokens Integer)
	(comment maxBiteTokens "maxBiteTokens describes that a hunter can take a certain number of bite tokens before dying")

(isa maxDamage BinaryPredicate)
	(arity maxDamage 2)
	(arg1isa maxDamage Agent)
	(arg2isa maxDamage Integer)
	(comment maxDamage "maxBiteTokens describes that an agent can take a certain amount of damage before dying")

(isa MinaHarker Hunter)
	(maxCards MinaHarker 3)
	(maxDamage MinaHarker 9)
	(maxBiteTokens MinaHarker 0)
(isa VanHelsing Hunter)
	(maxCards VanHelsing 3)
	(maxDamage VanHelsing 8)
	(maxBiteTokens VanHelsing 2)
(isa JohnSeward Hunter)
	(maxCards JohnSeward 4)
	(maxDamage JohnSeward 9)
	(maxBiteTokens JohnSeward 1)
(isa LordGodalming Hunter)
	(maxCards LordGodalming 3)
	(maxDamage LordGodalming 11)
	(maxBiteTokens LordGodalming 1)
(isa Dracula Agent)
	(maxDamage Dracula 15)
	(maxCards Dracula 3)
(isa usedPsychicBond BinaryPredicate)
	(arity usedPsychicBond 2)
	(arg1isa usedPsychicBond MapRegion)
	(arg2isa usedPsychicBond Integer)
	(comment usedPsychicBond "usedPsychicBond refers to how many turns ago Mina searched a region of the map for Dracula")


;;; MaturingHeuristic stuff


	;;;no card on space
	(<== (SumEncounterCards ?spaceOnTrail ?value)
	(uninferredSentence (cardOnTrail ?card ?spaceOnTrail))
	(evaluate ?value 0)
	)

	;;; card on trail, but face up
	(<== (SumEncounterCards ?spaceOnTrail ?value)
	(cardOnTrail ?card ?spaceOnTrail)
	(encounterFaceUpOnTrail ?card ?spaceOnTrail)
	(evaluate ?value 0)
	)


	(<== (SumEncounterCards ?spaceOnTrail ?value)
	(cardOnTrail ?card ?spaceOnTrail)
	(uninferredSentence (encounterFaceUpOnTrail ?card ?spaceOnTrail))
	(evaluate ?value ?spaceOnTrail)
	)

	(<== (MaturingHeuristic ?value)
	(SumEncounterCards 1 ?value1)
	(SumEncounterCards 2 ?value2)
	(SumEncounterCards 3 ?value3)
	(SumEncounterCards 4 ?value4)
	(SumEncounterCards 5 ?value5)
	(SumEncounterCards 6 ?value6)
	(evaluate ?value (PlusFn ?value1 ?value2 ?value3 ?value4 ?value5  ?value6))
	)

	(isa SumEncounterCards BinaryPredicate)
	(arity SumEncounterCards 2)
	(arg1isa SumEncounterCards Integer)
	(arg2isa SumEncounterCards Integer)

	(isa MaturingHeuristic UnaryPredicate)
	(arity MaturingHeuristic 1)
	(arg1isa MaturingHueristic Integer)



(isa cardOnTrail BinaryPredicate)
	(arity cardOnTrail 2)
	(arg1isa cardOnTrail EncounterCard)
	(arg2isa cardOnTrail Integer)
	(comment cardOnTrail "cardOnTrail refers to an encounter card that is on Dracula’s trail and which space of the trail it is on")

(isa locationOnTrail BinaryPredicate)
	(arity locationOnTrail 2)
	(arg1isa locationOnTrail Location)
	(arg2isa locationOnTrail Integer)
	(comment "locationOnTrail states that a Location is on Dracula’s trail at some number space")

(isa faceUpOnTrail BinaryPredicate)
	(arity faceUpOnTrail 2)
	(arg1isa faceUpOnTrail Location)
	(arg2isa faceUpOnTrail Integer)
	(comment "faceUpOnTrail  states that a Location is face up (and thus exposed to Hunters) on Dracula’s trail at some number space")

(isa encounterFaceUpOnTrail BinaryPredicate)
	(arity encounterFaceUpOnTrail 2)
	(arg1isa encounterFaceUpOnTrail EncounterCard)
	(arg2isa encounterFaceUpOnTrail Integer)
	(comment "encounterFaceUpOnTrail   states that an Encounter is face up (and thus exposed to Hunters) on Dracula’s trail at some number space")
(isa trainTicket Card)
(isa biteToken BinaryPredicate)
  (arity biteToken 2)
	(arg1isa biteToken Agent)
	(arg2isa biteToken Integer)
	(comment biteToken "biteToken  specifies that a certain Agent currently has a certain amount of bite tokens")

(isa hasBats Predicate)
	(arity hasBats 1)
	(arg1isa hasBats Agent)
	(comment hasBats "hasBats indicates that a certain agent has bats")

(isa hasStorm Predicate)
	(arity hasStorm 1)
	(arg1isa hasStorm Sea)
	(comment hasStorm "hasStorm indicates that a certain sea zone has a storm on it")

(isa hasFog BinaryPredicate)
	(arity hasFog 2)
	(arg1isa hasFog City)
	(arg2isa hasFog Integer)
	(comment hasFog "hasFog specifies that a certain city has a certain amount of fog")


(isa despairTokens Predicate)
  (arg1isa despairTokens Integer)
  (comment despairTokens "despairTokens specifies the number of despair tokens that are on the board, indicating how many weeks in the game have passed")


(isa influence Predicate)
  (arg1isa influence Integer)
  (comment influence "influence describes how far Dracula has progressed the influence track, indicating how close he is to winning the game")


(isa moveTo UnaryPredicate)
(arity moveTo 1)
(arg1Isa moveTo Location)

(isa leaveCard Predicate)
(arity leaveCard 3)
(arg1Isa leaveCard Set)
(arg2Isa leaveCard Integer)
(arg3Isa leaveCard Card)



;;; check to make sure that hunters don’t have too many bites
(<== (hasValidBiteTokens ?hunter)
  (isa ?hunter Hunter)
  (maxBiteTokens Hunter ?maxBites)
  (biteToken ?hunter ?bites)
  (greaterThan ?maxBites ?bites)
)

;;; check to make sure that hunters don’t have more than two train tickets each
(<== (hasValidTrainTickets ?hunter)
  (isa ?hunter Hunter)
  (hasCard ?hunter trainTicket ?numTickets)
  (greaterThan 3 ?numTickets)
)

;;; takes 6 location cards
(<== (allLocationsConnected ?location1 ?location2 ?location3 ?location4 ?location5 ?location6)
;;; all six locations are connected to each other
  (connectedTo ?location1 ?location2 ?way1)
  (connectedTo ?location2 ?location3 ?way2)
  (connectedTo ?location3 ?location4 ?way3)
  (connectedTo ?location4 ?location5 ?way4)
  (connectedTo ?location5 ?location6 ?way5)
;;; the connections are either ports or roads or sea adjacents (not yellow or white trains)
  (uninferredSentence (isa ?way1 train))
  (uninferredSentence (isa ?way2 train))
  (uninferredSentence (isa ?way3 train))
  (uninferredSentence (isa ?way4 train))
  (uninferredSentence (isa ?way5 train))
)


;;; takes 5 location cards
(<== (allLocationsConnected ?location1 ?location2 ?location3 ?location4 ?location5 ?location6)
;;; all six locations are connected to each other
  (connectedTo ?location1 ?location2 ?way1)
  (connectedTo ?location2 ?location3 ?way2)
  (connectedTo ?location3 ?location4 ?way3)
  (connectedTo ?location4 ?location5 ?way4)
  ;;; the connections are either ports or roads or sea adjacents (not yellow or white trains)
  (uninferredSentence (isa ?way1 train))
  (uninferredSentence (isa ?way2 train))
  (uninferredSentence (isa ?way3 train))
  (uninferredSentence (isa ?way4 train))
)

;;; takes 4 location cards
(<== (allLocationsConnected ?location1 ?location2 ?location3 ?location4 ?location5 ?location6)
;;; all six locations are connected to each other
  (connectedTo ?location1 ?location2 ?way1)
  (connectedTo ?location2 ?location3 ?way2)
  (connectedTo ?location3 ?location4 ?way3)
  ;;; the connections are either ports or roads or sea adjacents (not yellow or white trains)
  (uninferredSentence (isa ?way1 train))
  (uninferredSentence (isa ?way2 train))
  (uninferredSentence (isa ?way3 train))
)

;;; takes 3 location cards
(<== (allLocationsConnected ?location1 ?location2 ?location3 ?location4 ?location5 ?location6)
;;; all six locations are connected to each other
  (connectedTo ?location1 ?location2 ?way1)
  (connectedTo ?location2 ?location3 ?way2)
  ;;; the connections are either ports or roads or sea adjacents (not yellow or white trains)
  (uninferredSentence (isa ?way1 train))
  (uninferredSentence (isa ?way2 train))
)

;;; takes 2 location cards
(<== (allLocationsConnected ?location1 ?location2 ?location3 ?location4 ?location5 ?location6)
;;; all six locations are connected to each other
  (connectedTo ?location1 ?location2 ?way1)
  ;;; the connections are either ports or roads or sea adjacents (not yellow or white trains)
  (uninferredSentence (isa ?way1 train))
)


;;; check a location card on the trail: if it is a sea, it should not have an encounter
(<== (encounterCardInCity ?card)
  (cardOnTrail ?card ?spaceOnTrail)
  (locationOnTrail ?location ?spaceOnTrail)
  (isa ?location City)
)

(isa EncounterCard Collection)
	(genls EncounterCard Card)
	(comment EncounterCard "EncounterCard is a collection of all of Dracula’s encounter cards")
(isa VampireEncounter Collection)
	(genls VampireEncounter EncounterCard)
	(comment VampireEncounter "VampireEncounter is a collection of all vampire encounter cards")

(isa evasionUtility BinaryPredicate)
	(arity evasionUtility 2)
	(arg1isa evasionUtiltiy EncounterCard)
	(arg2isa evasionUtility Integer)
	(comment evasionUtility "evasionUtility describes how useful an encounter card is for helping Dracula evade the hunters")
(isa weakeningUtility BinaryPredicate)
	(arity weakeningUtility 2)
	(arg1isa weakeningUtility EncounterCard)
	(arg2isa weakeningUtility Integer)
	(comment weakeningUtility "weakeningUtility describes how useful an encounter card is for helping Dracula weaken the hunters")
(isa influnceUtility BinaryPredicate)
	(arity influnceUtility 2)
	(arg1isa influnceUtility EncounterCard)
	(arg2isa influnceUtility Integer)
	(comment influnceUtility "influnceUtility describes how useful an encounter card is for helping Dracula gain influence")

(isa RecklessVampire Collection)
	(genls RecklessVampire EncounterCard)
	(genls RecklessVampire VampireEncounter)
	(evasionUtility RecklessVampire 0)
	(weakeningUtility RecklessVampire 1)
	(influenceUtility RecklessVampire 2)
(isa NewVampire Collection)
	(genls NewVampire EncounterCard)
	(genls NewVampire VampireEncounter)
	(evasionUtility NewVampire 0)
	(weakeningUtility NewVampire 1)
	(influenceUtility NewVampire 2)
(isa AristocraticVampire Collection)
	(genls AristocraticVampire EncounterCard)
	(genls AristocraticVampire VampireEncounter)
	(evasionUtility AristocraticVampire 1)
	(weakeningUtility AristocraticVampire 0)
	(influenceUtility AristocraticVampire 1)
(isa Rats Collection)
	(genls Rats EncounterCard)
	(evasionUtility Rats 0)
	(weakeningUtility Rats 1)
	(influenceUtility Rats 0)
(isa Hoax Collection)
	(genls Hoax EncounterCard)
	(evasionUtility Hoax 1)
	(weakeningUtility Hoax 0)
	(influenceUtility Hoax 0)
(isa Saboteur Collection)
	(genls Saboteur EncounterCard)
	(evasionUtility Saboteur 1)
	(weakeningUtility Saboteur 0)
	(influenceUtility Saboteur 0)
(isa Bats Collection)
	(genls Bats EncounterCard)
	(evasionUtility Bats 2)
	(weakeningUtility Bats 0)
	(influenceUtility Bats 0)
(isa UnnaturalFog Collection)
	(genls UnnaturalFog EncounterCard)
	(evasionUtility UnnaturalFog 2)
	(weakeningUtility UnnaturalFog 0)
	(influenceUtility UnnaturalFog 0)
(isa Wolves Collection)
	(genls Wolves EncounterCard)
	(evasionUtility Wolves 0)
	(weakeningUtility Wolves 1)
	(influenceUtility Wolves 0)
(isa Spy Collection)
	(genls Spy EncounterCard)
	(evasionUtility Spy 1)
	(weakeningUtility Spy 0)
	(influenceUtility Spy 0)
(isa DesecratedSoil Collection)
	(genls DesecratedSoil EncounterCard)
	(evasionUtility DesecratedSoil 1)
	(weakeningUtility DesecratedSoil 0)
	(influenceUtility DesecratedSoil 0)
(isa SzganyMob Collection)
	(genls SzganyMob EncounterCard)
	(evasionUtility SzganyMob 0)
	(weakeningUtility SzganyMob 1)
	(influenceUtility SzganyMob 0)
(isa SzganyBodyguards Collection)
	(genls SzganyBodyguards EncounterCard)
	(evasionUtility SzganyBodyguards 1)
	(weakeningUtility SzganyBodyguards 1)
	(influenceUtility SzganyBodyguards 0)




(isa moveTo UnaryPredicate)
(arity moveTo 1)
(arg1Isa moveTo Location)

(isa leaveCard Predicate)
(arity leaveCard 3)
(arg1Isa leaveCard Set)
(arg2Isa leaveCard Number)
(arg3Isa leaveCard Card)

(isa stressAt BinaryPredicate)
(arity stressAt 2)
(arg1Isa stressAt Number)
(arg2Isa stressAt Location)


;;; horn clause to determine dracula’s extra damage from going into a sea (+2) or between seas (+1).
(isa extraDamage Relation)
(arity extraDamage 4)
(arg1Isa extraDamage Integer)
(arg2Isa extraDamage Location)
(arg3Isa extraDamage Location)
(arg4Isa extraDamage Integer)

;;; moving from land to sea
(<== (extraDamage ?originalDamage ?currentLocation ?nextLocation ?newDamage)
(uninferredSentence (isa ?currentLocation Sea))
(isa ?nextLocation Sea)
(evaluate ?newDamage (PlusFn 2 ?originalDamage))
)

;;; moving from sea to sea
(<== (extraDamage ?originalDamage ?currentLocation ?nextLocation ?newDamage)
(isa ?currentLocation Sea)
(isa ?nextLocation Sea)
(evaluate ?newDamage (PlusFn 1 ?originalDamage))
)

;;; moving from land to land
(<== (extraDamage ?originalDamage ?currentLocation ?nextLocation ?newDamage)
(uninferredSentence (isa ?currentLocation Sea))
(uninferredSentence (isa ?nextLocation Sea))
(evaluate ?newDamage (PlusFn 0 ?originalDamage))
)

